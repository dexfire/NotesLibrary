
一、Canvas动画（非GPU动画）：

实现： 30帧模式 -> 16ms 内：OnLayout OnMeasure Ondraw 非常消耗时间，且占用主线程
性能消耗： 计算曲线【主要】，设置渐变色，
优化：减少层级，减少Dirty区域【脏区】

动画： 谷歌动画（图片）		效率更高，
		帧动画（手动绘制）  减少安装包大小，无静态资源
		刷新频率：16ms（30帧） ，方式 Handler -> indivate()

		
		
数学模型 -> 建坐标系（映射）-> 曲线微分到直线（两点式） -> 渐变填充等


Canvas特性： 
	XFermode ： 两图层相交时，前景背景图的处理方式
	Clip：只在某处绘制
	RectF: 可以设置【渐变色】
	

					sin波纹动画 两端趋近于y=0  
					sin 函数 
					离散系数 趋近于0 

					sin(0.75)

					128 个采样点

					坐标映射：：：  width - > (-2,2)
									height - > f(x)
									
					画线：： Path工具类


					不规则渐变填充

二、硬件绘制 OpenGL：
	祖宗线程Init -> 初始化OpenGL，设置VSync（刷新率） ->  Window Service[背景 输入法 状态栏 对话框] -> AIDL application -> PhoneWindow -> DecorView -> MainLayout
	SurfaceFlingerServices
	GLSurfaceView 继承自 SurfaceView
	Renderer： 绘制器，渲染器 【在独立线程内循环运行，】
	同步处理：退出循环用，定义同步锁【Object虚拟锁即可】
	CPU：逻辑强，GPU：计算强
	方向：安卓音视频，有门槛【大学，北大青鸟，高中生都会写APP？】
	
优点：高帧率
优化方式： 
	减少绘制时间（脏区计算--刷新机制）
	子线程进行长时间操作
	！！！Cocos 硬件绘制 【不同于硬件加速】
	

	
	黄油刀  架构工具
